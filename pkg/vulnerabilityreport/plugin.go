package vulnerabilityreport

import (
	"io"

	"github.com/khulnasoft-lab/vul-operator/pkg/apis/khulnasoft-lab/v1alpha1"
	"github.com/khulnasoft-lab/vul-operator/pkg/docker"
	"github.com/khulnasoft-lab/vul-operator/pkg/vuloperator"
	corev1 "k8s.io/api/core/v1"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

// Plugin defines the interface between Vul-operator and static vulnerability
// scanners.
type Plugin interface {

	// Init is a callback to initialize this plugin, e.g. ensure the default
	// configuration.
	Init(ctx vuloperator.PluginContext) error

	// GetScanJobSpec describes the pod that will be created by Vul-operator when
	// it schedules a Kubernetes job to scan the workload with the specified
	// descriptor.
	// The second argument maps container names to Docker registry credentials,
	// which can be passed to the scanner as environment variables with values
	// set from returned secrets.
	GetScanJobSpec(ctx vuloperator.PluginContext, workload client.Object, credentials map[string]docker.Auth,
		securityContext *corev1.SecurityContext) (corev1.PodSpec, []*corev1.Secret, error)

	// ParseReportData is a callback to parse and convert logs of
	// the pod controlled by the scan job to v1alpha1.VulnerabilityScanResult.
	ParseReportData(ctx vuloperator.PluginContext, imageRef string, logsReader io.ReadCloser) (
		v1alpha1.VulnerabilityReportData, v1alpha1.ExposedSecretReportData, *v1alpha1.SbomReportData, error)
}
